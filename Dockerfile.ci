# Install dependencies only when needed
FROM node:alpine AS deps
# Check https://github.com/nodejs/docker-node/tree/b4117f9333da4138b03a546ec926ef50a31506c3#nodealpine to understand why libc6-compat might be needed.
RUN apk add --no-cache libc6-compat
WORKDIR /app
COPY package.json yarn.lock vite.config.ts ./

# COPY .env.production ./.env.production

RUN yarn install --frozen-lockfile

# Rebuild the source code only when needed
FROM node:alpine AS builder
WORKDIR /app
COPY . .

ENV BASE_PATH admin

COPY --from=deps /app/node_modules ./node_modules
RUN yarn build  && yarn install --production --ignore-scripts --prefer-offline

# Production image, copy all the files and run next
FROM node:alpine AS runner
WORKDIR /app

# ENV NODE_ENV production
ENV BASE_PATH admin

RUN addgroup -g 1001 -S nodejs
RUN adduser -S nextjs -u 1001

# You only need to copy next.config.js if you are NOT using the default configuration
COPY --from=builder /app/node_modules ./node_modules
COPY --from=builder /app/package.json ./package.json
COPY --from=builder /app/vite.config.ts ./vite.config.ts
COPY --from=builder /app/packages ./packages

RUN mkdir -p /app/node_modules/.vite/deps_temp

# COPY --from=builder /app/node_modules/.vite/deps ./.vite/deps_temp

USER nextjs

EXPOSE 8000

ENV PORT 8000
# ENV BASE_PATH admin

# Next.js collects completely anonymous telemetry data about general usage.
# Learn more here: https://nextjs.org/telemetry
# Uncomment the following line in case you want to disable telemetry.
# ENV NEXT_TELEMETRY_DISABLED 1

# CMD ["node_modules/.bin/vite", "--no-open", "--host", "0.0.0.0", "--port", "8000"]

# Setup nginx server for frontend
# Handle Nginx
FROM nginx
COPY --from=builder /app/dist /usr/share/nginx/html
COPY ./docker/nginx/default.conf /etc/nginx/conf.d/default.conf


